-- 1. Users Table
CREATE TABLE public.users (
  id uuid PRIMARY KEY DEFAULT gen_random_uuid(),
  nickname text NOT NULL,
  name_tag text NOT NULL,
  tier char(1),
  discord_id text,
  discord_access_token text,
  oauth_provider text,
  oauth_id text,
  created_at timestamptz NOT NULL DEFAULT now(),
  updated_at timestamptz NOT NULL DEFAULT now()
);
ALTER TABLE public.users ENABLE ROW LEVEL SECURITY;

-- 2. Games Table
CREATE TABLE public.games (
  id bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  code text NOT NULL UNIQUE,
  name text NOT NULL,
  tags text[],
  image_url text,
  created_at timestamptz NOT NULL DEFAULT now(),
  updated_at timestamptz NOT NULL DEFAULT now()
);
ALTER TABLE public.games ENABLE ROW LEVEL SECURITY;

-- 3. Tracks Table
CREATE TABLE public.tracks (
  id bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  parent_id bigint REFERENCES public.tracks(id),
  code text NOT NULL UNIQUE,
  name text NOT NULL,
  country text,
  created_at timestamptz NOT NULL DEFAULT now(),
  updated_at timestamptz NOT NULL DEFAULT now()
);
ALTER TABLE public.tracks ENABLE ROW LEVEL SECURITY;

-- 4. Records Table
CREATE TABLE public.records (
  id bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  user_id uuid NOT NULL REFERENCES public.users(id),
  game_id bigint NOT NULL REFERENCES public.games(id),
  track_id bigint NOT NULL REFERENCES public.tracks(id),
  title text NOT NULL,
  content text,
  is_certified boolean DEFAULT false,
  created_at timestamptz NOT NULL DEFAULT now(),
  updated_at timestamptz NOT NULL DEFAULT now()
);
ALTER TABLE public.records ENABLE ROW LEVEL SECURITY;

-- 5. Record Images Table
CREATE TABLE public.record_images (
  id bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  record_id bigint NOT NULL REFERENCES public.records(id) ON DELETE CASCADE,
  image_url text NOT NULL,
  created_at timestamptz NOT NULL DEFAULT now()
);
ALTER TABLE public.record_images ENABLE ROW LEVEL SECURITY;

-- 6. Game Schedules Table
CREATE TABLE public.game_schedules (
  id bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  nano_id text NOT NULL UNIQUE,
  title text NOT NULL,
  master_user_id uuid NOT NULL REFERENCES public.users(id),
  game_id bigint NOT NULL REFERENCES public.games(id),
  password text,
  content text,
  is_pre_revealed boolean DEFAULT false,
  join_guide text,
  schedule_mode int NOT NULL, -- 0: 단일, 1: 주간 반복
  datetime_start timestamptz,
  datetime_end timestamptz,
  weekly_days int, -- 비트마스크
  weekly_time_start time,
  weekly_time_end time,
  discord_link text,
  created_at timestamptz NOT NULL DEFAULT now(),
  updated_at timestamptz NOT NULL DEFAULT now()
);
ALTER TABLE public.game_schedules ENABLE ROW LEVEL SECURITY;

-- 7. Game Schedule Tracks Table
CREATE TABLE public.game_schedule_tracks (
  id bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  game_schedule_id bigint NOT NULL REFERENCES public.game_schedules(id) ON DELETE CASCADE,
  track_id bigint NOT NULL REFERENCES public.tracks(id) ON DELETE CASCADE,
  "index" int NOT NULL
);
ALTER TABLE public.game_schedule_tracks ENABLE ROW LEVEL SECURITY;

-- 8. Game Schedule Members Table
CREATE TABLE public.game_schedule_members (
  id bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  game_schedule_id bigint NOT NULL REFERENCES public.game_schedules(id) ON DELETE CASCADE,
  user_id uuid NOT NULL REFERENCES public.users(id) ON DELETE CASCADE,
  is_master boolean DEFAULT false
);
ALTER TABLE public.game_schedule_members ENABLE ROW LEVEL SECURITY;

-- 9. Game Schedule Chats Table
CREATE TABLE public.game_schedule_chats (
  id bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  game_schedule_id bigint NOT NULL REFERENCES public.game_schedules(id) ON DELETE CASCADE,
  user_id uuid NOT NULL REFERENCES public.users(id) ON DELETE SET NULL, -- 작성자 탈퇴 시 메시지 유지를 위해 SET NULL
  message text NOT NULL,
  created_at timestamptz NOT NULL DEFAULT now()
);
ALTER TABLE public.game_schedule_chats ENABLE ROW LEVEL SECURITY;
